name: Release

on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write
  pages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    outputs:
      release-tag: ${{ steps.tag.outputs.tag }}
      release-upload-url: ${{ steps.create-release.outputs.upload_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine tag
        id: tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "tag=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog between current tag and previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [[ -n "$PREVIOUS_TAG" ]]; then
            CHANGELOG=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"- %s")
          fi

          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: RCMD ${{ steps.tag.outputs.tag }}
          body: |
            ## 🚀 RCMD Release ${{ steps.tag.outputs.tag }}

            ### What's Changed
            ${{ steps.changelog.outputs.changelog }}

            ### 📦 Docker Images
            - Production: `ghcr.io/${{ github.repository }}:${{ steps.tag.outputs.tag }}`
            - Latest: `ghcr.io/${{ github.repository }}:latest`

            ### 🐳 Quick Start
            ```bash
            docker run -d \
              --name rcmd \
              -p 3000:3000 \
              -v rcmd-data:/app/data \
              ghcr.io/${{ github.repository }}:${{ steps.tag.outputs.tag }}
            ```

            ### 📚 Documentation
            - [GitHub Repository](https://github.com/${{ github.repository }})
            - [Documentation](https://github.com/${{ github.repository }}/tree/main/claudedocs)

            ---
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.previous-tag }}...${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: ${{ contains(steps.tag.outputs.tag, '-') }}

  build-release-assets:
    name: Build Release Assets
    runs-on: ubuntu-latest
    needs: create-release

    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=release-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=release-${{ matrix.platform }}

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build documentation site
        run: |
          # Create a simple docs site from claudedocs/
          mkdir -p docs-site
          cp -r claudedocs/* docs-site/

          # Create index.html for GitHub Pages
          cat > docs-site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>RCMD Documentation</title>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <style>
              body { font-family: -apple-system, BlinkMacSystemFont, sans-serif; margin: 40px; }
              h1 { color: #333; }
              ul { list-style-type: none; padding: 0; }
              li { margin: 10px 0; }
              a { color: #0066cc; text-decoration: none; }
              a:hover { text-decoration: underline; }
            </style>
          </head>
          <body>
            <h1>📚 RCMD Documentation</h1>
            <ul>
              <li>📖 <a href="readme.md">Project Overview</a></li>
              <li>🚀 <a href="development-setup.md">Development Setup</a></li>
              <li>🏗️ <a href="technical-architecture-design.md">Technical Architecture</a></li>
              <li>📋 <a href="project-current-status.md">Current Status</a></li>
              <li>🐳 <a href="docker-development-guide.md">Docker Guide</a></li>
            </ul>
          </body>
          </html>
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs-site